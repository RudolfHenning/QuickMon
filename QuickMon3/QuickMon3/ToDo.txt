CHANGES (considdered possible for next release)
Collector stats history saved/persisted to disk... somehow...
CollctorEntry to have 'Category' (perhaps multiple). 
  Can then be used to filter (visually) in UI client or autoexpand on load in UI client (monitorpack define which categories shown on first start)
Copy/Paste of collector entry to clipboard so it can copied to another separate instance as well
  Also include child collector entries when CTRL is pressed while copying
monitor pack path visible (in small gray text) somewhere on app.
Recent monitorpacks quick list only display name and not path (except when non standard location is used)
	Perhaps add application setting to switch between showing full path and 'name only'
BUG: After prompted for saving changes and selecting no then loading new pack does not remove '*' from title.

--------------------------------------------------------------------------------------------------------
COLLECTOR/NOTIFIER IDEAS
Event Scavenger collector set
DirectoryEntry Collector (Directory services)
	Very generic querying at first (or it could become very complex)
SOAP collector to be removed (replaced by dynamic WS collector)

--------------------------------------------------------------------------------------------------------
NEXT VERSION CHANGES
Allow multiple monitor packs in Windows client (different tabs...)
Future advancement - Allow corrective scrpts to run on remote hosts
Detail views use dataset as source (so remote host stuff can work)
Separate all UI components from Agents (so the Edit/View windows are in separate dll)
Group presets (bundling presets with different types of agents)
RAW edit of agent config must include 'Entry' config as well

--------------------------------------------------------------------------------------------------------
BIG CHANGES (somewhere in future)
(A) (dummy interface method added in 3.13 but not used yet)
Detail views can/must use remote host dataset as source 
  Will require interface changes (new method on all collectors to return something like DataSet)
     Will have to be a method that returns a DataSet with possibly multiple 'Tables' for Collectors like SQL and WMI query
  Also new interface on WCF interface (Done)
  Additional this change could mean the 'Detail viewer' could be simplyfied to a DataSet viewer (not sure about the 'multiple' datasets yet)
  Each collector agent must specify if it supports simple/single dataset, multiple datasets (not linked), multiple/nested that are linked with parent/child key relation
    for multiple/nested datasets some special columns might have to be added (Column name:linked, value: table name with detail)

Convert to WPF app (yeah right) (Next version +1)
   First step is to remove/or separate all UI components from core parts. * Done

--------------------------------------------------------------------------------------------------------
POSSIBLE CHANGES (might be just nice to have)
Separate all UI components from Agents (so the Edit/View windows are in separate dll)
	Some form of class name matching will have to be done (so no hard reference)

Variable names like %Server% in things like performance counters, Services etc - CollectorEntry add property for 'ServerName'

Collector (Entry) must support method to indicate if config is 'complete'/valid so Edit window can enable/disable OK button
	Public method something like IsConfigValid()

Add some way to have UI client save collapsed/expand state of tree nodes in qmconfig file.
Add some way Collector/Agent types have its own Icon that can be displayed in select collector type window.
Add 'Pause' property on Collector (not the same as Disable). It returns the previous state - whatever it was.

-------------------------------------------------------------------------------------------------------
DONE CHANGES
Add Restoration scripts (to be run when alert state change from warning/error to good only). Could be used to start something that was disabled by corrective scripts.*done
Also, add option to have corrective scripts only execute first time error or warning state is triggered *done
BUG: Fix default file association with qmconfig files (open through Windows Explorer) *done

V3.4
BUG: Polling frequency of Windows app does not get saved on exit *done
On main window have shortcut/menu/button to load 'Recent list' (perhaps like service monitor dropdown but only visible when button is clicked) *done
On select collector/notifier type window have option to go to 'Import from existing config' as well (default is to bring up new config window) *done
BUG: Check out the drag & droping/sorting of nodes in the treeview. Not working properly if node is last child node and parent is also a last child. *done

V3.5
Additional to Repeat after/Delay alert with minutes/seconds also have option for number of alerts *done
  e.g. Number of Warning/error polls before repeating alert.
  and  Number of Warning/error polls before raising alert.
Add some category/Type for Collector agent (class) so it can be grouped in the 'Select Collector type list' *done
Remote host overrides on parent collector (specify a remote host on parent that will apply to all child collectors - applied at run time) *done

V3.6
Added OleDb query collector
The GetEditConfigWindow method in AgentBase (for Collectors) must be removed - not used anymore. Notifiers still use it darn...

V3.7
'Fix' irritating issue where % Processor time perf counter query in itself sometimes cause 100% cpu usage.
Removed Windows.Forms reference from QuickMonCore dll
Copy and Paste of Collectors (to duplicate parts of the treeview - perhaps later with 'replace computer name/any string' in config)
Add run-time setting per collector entry level that indicate it should not refreshed while a previous instance has finished (or within X seconds, whichever comes first)
Collector stats/details popup window - show stuff like last refresh time, error msg, call duration...
Upon refresh initiated (F5 clicked) change font or style (or color) for each Node that will be refreshed. On update of status it will be reset to default.
Add a way to add the firewall exception rule for port 8181
Fixed unknown bug where monitorpack used LastMonitorState in stead of CurrentState to get global state
Rearrange menu/toolbar so most important actions are first
Add double click to windows services collector edit to add/remove selected services
Set initial values for BizTalk suspended counts settings ( > 0)

V3.8
IIS Collector
   App pools started/stopped (using performance counters and/or DirectoryEntry methods)
'Enterprize' agents removed from main installer. Available as separate downloads.
Import Collector Config window - double click must fire OK button
Check Default 'Polling' entries on menus (default = 30sec, Slow = 60 sec, Fast = 5 Sec)

V3.9
Powershell script collector
	Run a script and query result for some 'Text'. Could be powerfull and also dangerous.
If MonitorPack changed in UI client add * to title
Corrective script can also be Powershell scripts...
Fixed Override remote host on child collectors

v3.10
BUG: Event log collector trigger error when 'is out of bounds' is thrown - but collector trigger was not found.
Collector stats windows not dialog - so you can launch multiples... like detail view
Collector stats must show more than current and previous. Have a history 'size' setting in the UI app that sets a run-time setting for each Collector Entry to keep history.

v3.10a
Fixed KnownHostList bug on CollectorEdit window.

v3.11
Added FilesExistOnly and ErrorOnFilesExist properties to File system collector
Monitor pack has overriding polling frequency
Add setting per collector entry level to specify that it should only 'refresh' with X seconds no matter the main polling frequency (obviously must be larger than polling frequency)
  Default is 'Unspecified' which means it will get refreshed every time main process do a heart-beat (polling).
  When refreshing from UI client this setting gets override (so every refresh execute agent)??
  ((Also add a way for a collector to overwrite/supress the polling frequency. Something like only allow state update every X seconds (or return previous state if polled earlier.)))
  Dynamic repolling (sliding scale). If warning/error state is returned the polling frequencyfor the resource must get slower (to avoid monitor to death scenario)
Edit Collector config: Alert settings on separate tab
Collector history on separate tab in stats

v3.12
Press delete key on Collector treeview on main window must fire delete function
Background image on about screen stretch - on high dpi displays.
Fix toolStripStatusLabelStatus text that grew big on notifier error
Add tooltip text to statusbar so long text can be viewed
Fixed polling frequency quick links (5/30/60 seconds was set to 5000/30000/60000 but setting work in secs)
Set default polling frequency to 30 if too large value was set.
MonitorState now stores call duration as well
Collector stats history list view displays time, state, duration and details in separate columns
Fix bug: In Collector stats if ForceRemoteExcuteOnChildCollectors was set selected collector 'Remote agent host enabled' value was set Yes.
Add drop down box on main Window (visible only on mouse hover) for Recent monitor packs
Changed the main toolbar to hide the border
Fixed/change Window service collector to report error ONLY when all services from all machines are down (and not when all services r down from any one of the machines in the list)

v3.13
Added Audio notifier
Fix Notifier interface to remove duplicate Edit config window
Added Attended/NotAttended options to Notifiers:
   'In memory notifier has no function in Windows Service'. Perhaps add property on notifier that indicates if supports running 'unattended' - if not it won't be loaded by service
   Perhaps have 'Property' on Notifier Entry that indicate if it should function 'Only attended'/'Unattended'/Both. Memory notifier will have default of 'Only attended'.
   Some notifiers will only support 'Only attended' - like in memory.
Add WCF method on remote host to return version number of QuickMon
  Visible in Remote agent manage window
Add 'Sample' monitor packs to installers

v3.14
Agent preset configs (work in progress)
  add presets based on xml file *.qps 
  (Addressing: Some way to add predefined sets of collector settings (like set of perf counters for system health))
Fix: press delete key on notifier list fire delete notifier event
Fix: delete of multiple notifiers caused out of index exception
Installer now has treeview with optional agents that can be selected to be installed or not

v3.15
Fix registery collector - allow blank key name (for 'Default' values)
On Saving monitorpack only option should be qmp file type (old qmconfig only visible on load)
Set default history size in monitor packs to 100
Extend Presets/Templates
	"Add agent" window list Presets/Templates first (with option to load 'RAW' empty agent as well) with their friendly names
		All agents must have 'default' preset ;) (ok just some that can...)
		Only for 'available'/registered agents of course
		"Add agent" window still have option to 'edit' raw config afterwards before show old 'Edit' agent (collector/notifier)
	App setting for preference to select agents by preset or type first
	Editing Presets
    Also "reset' option from installed set

v3.16
Add WcfEnableMetadata setting to Windows service
Adding Dynamic Web Service Collector (to replace SOAP web service collector )

v3.17
CollectorEntryRequest class must be decorated with [DataContract] and [DataMember] (aka http://www.integratedwebsystems.com/2009/05/wcf-data-contracts-and-k__backingfield-property-naming/)
  Note that this breaks remote agent host queries to previous versions... as serialiazed string returned has different property names (wrong before)
Template manage: allow import of multiple files.
Block remote host inheritance on child collectors (if parent has override on but child must NOT use it.)
Collector history to include which alerts (notifiers) fired.
Collector history to include on which 'host machine name' it ran
Collector history - Details rich text box have copy shortcut menu
MonitorPack - add Type property. 
  App settings (string array) of Monitor pack types that are visible in quick recent drop down list 
     One list for Include, one list for exclude
CollectorEntry/NotifierEntry (class) to have array of Dynamic Config Variables (with 'value to search for', 'value to replace with')
    Will be used to replace 'value to search for' in config stream with 'value to replace with' at run-time (when creating instance)
	Potential to later add Global Dynamic Config Variables (at MonitorPack level)
Known Remote agent list to show port in separate column

v3.18
Registry collector - add ability to handle binary and string array data types.
SOAP web service collector marked as deprecated.
Event log collector - text can be tested with Regular expression
File collector - scan contents of files, plus use regex
-------------------------------------------------------------------------------------------------------

