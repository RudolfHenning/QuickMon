<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAD///8A8OzwAOjo6AAoJCgAqKSoADAsMAAoKCgA8PDwAGgUMAB4VJgAGBQYAHh0eABwLFgAOAAAABgQ
        GADo5OgAMDAwAODg4AD49PgAcERIACAgIACARGAAuKTIAPj4+AA4NDgAiGCoAIhYmACwiJAAEAgAAOjg
        8ADg0OgAGBgYAIiEiADYxOAAKCAoAODc4ACQYLAAiGiwALCssACohMgAAAAAAMCk0ACodIgAIBwgAGAc
        SAAwKCgAIBggAJiQmAAQDBgAsJTQANjY2ABQKCgAcCAwAGAQKACIiIgAyLDYANjU2AA4DBAAiHCgAEgc
        KAAQCBAAmHTAAAAIAAAgFBgAoGyAAODQ0ADg1PAAYFxgAEgUGACQUGgAmGSAAHBscADw6PAAIBQgAHg8
        YAAwKDAAyLTYAKiQwADIwNgAkHSoAPj4/wBIREgAaGRoALig0ACYYHAA0MDgAP/8/wDQxNgAQDxAAEBA
        QABYWFgAaChYAKB8uACYeLAAgEBoAKiEwACghLgAgFigACgcKADQwNgAKCQwAGggUABoJFAAeDBgAHgs
        YACAPGgAmHS4AJhwuACghMgAsJTIAKCIuAAQEBgAsJTAACggIACAgIAAoGx4AJBYaADg2NgAQBQYAPjw
        8ADQvOAA0MTgAMC40ADAsNAAQBAQADgQEACghLAAQBAYALigyAB4MFgAaCxQAOjg4ACQXHAA2MjoAJhs
        sACwmLgAyLTQAEgYIADArNgAQAwYAHg4WACIUGgAwLDIAIBQoABgHFAAGAwYAIBcoAAwLDgAoIC4AKCM
        uAAwMDgAkIiQAJh8sACQkJgAODg4ADgwOABISEgASBwgAGhoaABgYGAAoJygACAYGACQbLAAmHi4ALCQ
        yAAgHCgAICAoAMCo0AC4nMgAkFRwABAMEACgoKAAgHyAALCYwABYVFgA2MjgAODM6ADQtNgAkFhwAODU
        6AD/+P8A8OTwANjM6AC4pMAAyLjQALiowADIyMgAyMTIADAkKADQuNgAuJzQAHg0YAAoGCAAsJjQAJBo
        qABwcHAAKBwgAOjg6ACojMAAKBgoANjQ2ACwnMAAYBhIALioyAAoIDAAkGyoANDI4AC4rMgAkHCwAMCs
        0ACoiMAA2MzgAJCMkADIvNAAwLjIAMC0yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKAooKCgoKCgoKCgoCgooKAoKKCgoKCgoKCgoKB8+KygoAwMoKCgoKCgoLS4sLD8/LCwuLSgo
        KCgoKCgFUlEGKAoGUQYoKCgoKC1mZQgIDQ0ICGVmLSgoKCgoEDYgBSgoKAOcUnYoKCgoOwxoZww8PAxn
        aAw7KCgoKBAEBBAoKCgoKAaeIAYGcZ0aaRkkYTw8YSQZaRqJKxQDNgQYKCgoKCgoKAUgoCYTf15raj0l
        MDAlPWprXot2WJ9yECgoKCgoKCgoKBAGAz9KXF8nJ10wMKJsJ19cFQ6hAwUoKCgFFCsfAygoKCgopV2k
        MTExbm8wo20xMW1gIigoKCgoBVJRHyg+FCgoKCimYFMpKSlwDm9uUykpU00iKCgoKBA2IAUoCqoQFAYG
        KwqpqDdMTBYODnApNzenhAofFAMGBAQQKCgoAxhacgSuOUVAeCEhewoOrUxVVSpUOXFZQ6yrGCgoKCgo
        BgMGBisOsrGwHh5OCg4WVR4er3M/HxQDAxAoKCgoKCgoKCgoKC50iB4dHWMKDhYhHh2zjhQoKCgoKCgo
        KCgoKCgoKCgodkRAHrW0VwoOFiFCEhsrHygoKCgoKCgoKCgoKCgoKBQcObe2UFYPHw4WIRJ3QX0cFCgo
        KCgoKCgoKCgoKCgDAwMKA3kdUFcKDhYhQkgzCgMDAygoKCgoKCgoKCgoBllYAygFenkeYwoOFnhXuAUo
        A1hZBigoKCgoKCgoKAZDWgYoKCgYEHu5Dg6VgAUYKCgoBVpDBSgoKCgoKCgFQwsFKCgoKCgoA0ksLEkD
        KCgoKCgoBQsLBSgoKCgoKANHAygoKCgoSwO7fTU0fLoGBSgoKCgoBjYGKCgoKCgoA0cDKCgoKLxbCWJJ
        f0QuIn4VLSgoKCgGIAYoKCgoKCgDRwMoKCibgoFeXVxNgBYWRkUVGCgoKAYgBigoKCgoKANHAygoKCjA
        v4ZfvjeFEoW9hCIoKCgoBiAGKCgoKCgoBcMFKCgoKEsJwpTBNxISSIiHBSgoKCgQNhAoKCgoKCgoGCgo
        KCgoKEmLx8aKIcUticQoKCgoKCiaKCgoKCgoKCgoKCgoKAUuOcoMYsmOS42MOS4FKCgoKCgoKCgoKCgo
        KCgoKCiTkgmRkI/NzEvLTUqRCZKTKCgoKCgoKCgoKCgoKCgoBZjS0SJiYdCVz85NIiJgTJSWKCgoKCgo
        KCgoKCgoKChkmGMvKCiXlpcv1BgoKC/TTgUoKCgoKCgoKCgoKCgoKGRPBSgoKCgoKCgoKCgoKJnVBSgo
        KCgoKCgoKCgoKCgoBU8FKCgoKCgoKCgoKCgomtYYKCgoKCgoKCgoKCgoKChkOgMoKCgoKCgoKCgoKCib
        1wUoKCgoKCgoKD/zP/EfwA/hD4AHw4eAB4fAAAAP4AAAH/AAADg+AAHwHgAB4QAAAAOAAAAHwAAAD/4A
        Af/+AAH//AAA//gAAH/wgAQ/4cAOH8PwPw/HwA+Px4AHj8cAA4/HgAePx4AHj+/AD9//AAP//gAB//wA
        AP/8MDD//H/4//x/+P/8f/j/
</value>
  </data>
</root>