//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuickMon.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QuickMon.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _308 {
            get {
                object obj = ResourceManager.GetObject("308", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap add {
            get {
                object obj = ResourceManager.GetObject("add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap clock {
            get {
                object obj = ResourceManager.GetObject("clock", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap clockBW {
            get {
                object obj = ResourceManager.GetObject("clockBW", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap doc_add {
            get {
                object obj = ResourceManager.GetObject("doc_add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap doc_edit {
            get {
                object obj = ResourceManager.GetObject("doc_edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap doc_refresh {
            get {
                object obj = ResourceManager.GetObject("doc_refresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap doc_remove {
            get {
                object obj = ResourceManager.GetObject("doc_remove", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit_32 {
            get {
                object obj = ResourceManager.GetObject("edit_32", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///  &lt;eventlogs&gt;
        ///    &lt;!--
        ///    &lt;log computer=&quot;&quot; eventLog=&quot;&quot; typeInfo=&quot;False&quot; typeWarn=&quot;True&quot; typeErr=&quot;True&quot; containsText=&quot;False&quot; textFilter=&quot;&quot;
        ///         withInLastXEntries=&quot;100&quot; withInLastXMinutes=&quot;60&quot; warningValue=&quot;1&quot; errorValue=&quot;10&quot;&gt;
        ///      &lt;sources&gt;
        ///        &lt;source&gt;Application&lt;/source&gt;
        ///      &lt;/sources&gt;
        ///      &lt;eventIds&gt;
        ///        &lt;eventId&gt;0&lt;/eventId&gt;
        ///      &lt;/eventIds&gt;      
        ///    &lt;/log&gt;
        ///    --&gt;
        ///  &lt;/eventlogs&gt;
        ///&lt;/config&gt;.
        /// </summary>
        internal static string EventLogCollectorDefaultConfig {
            get {
                return ResourceManager.GetString("EventLogCollectorDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///  &lt;eventLog computer=&quot;.&quot; eventSource=&quot;QuickMon&quot; successEventID=&quot;0&quot; warningEventID=&quot;1&quot; errorEventID=&quot;2&quot; /&gt;
        ///&lt;/config&gt;.
        /// </summary>
        internal static string EventLogNotifierDefaultConfig {
            get {
                return ResourceManager.GetString("EventLogNotifierDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///  &lt;directoryList&gt;
        ///    &lt;!--
        ///    &lt;directory directoryPathFilter=&quot;c:\temp\*.*&quot; testDirectoryExistOnly=&quot;False&quot;
        ///               warningFileCountMax=&quot;1&quot; errorFileCountMax=&quot;100&quot; 
        ///               warningFileSizeMaxKB=&quot;0&quot; errorFileSizeMaxKB=&quot;0&quot; 
        ///               fileMaxAgeSec=&quot;120&quot; fileMinAgeSec=&quot;0&quot; fileMinSizeKB=&quot;0&quot; fileMaxSizeKB=&quot;0&quot; /&gt;
        ///    &lt;directory directoryPathFilter=&quot;c:\test\*.*&quot; testDirectoryExistOnly=&quot;False&quot; 
        ///               warningFileCountMax=&quot;0&quot; errorFileCountMax=&quot;0&quot; 
        ///               warningFi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FileSystemCollectorDefaultConfig {
            get {
                return ResourceManager.GetString("FileSystemCollectorDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///	&lt;inMemory maxEntryCount=&quot;99999&quot; /&gt;
        ///&lt;/config&gt;.
        /// </summary>
        internal static string InMemoryNotifierDefaultConfig {
            get {
                return ResourceManager.GetString("InMemoryNotifierDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///  &lt;logFile path=&quot;please specify a valid path&quot; createNewFileSizeKB=&quot;0&quot; /&gt;
        ///&lt;/config&gt;.
        /// </summary>
        internal static string LogFileNotifierDefaultConfig {
            get {
                return ResourceManager.GetString("LogFileNotifierDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///	&lt;loopback returnState=&quot;Good&quot; /&gt;
        ///&lt;/config&gt;.
        /// </summary>
        internal static string LoopbackCollectorDefaultConfig {
            get {
                return ResourceManager.GetString("LoopbackCollectorDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap OUTLLIBR_9825 {
            get {
                object obj = ResourceManager.GetObject("OUTLLIBR_9825", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap page_white_lightning {
            get {
                object obj = ResourceManager.GetObject("page_white_lightning", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///  &lt;performanceCounters&gt;
        ///    &lt;!--
        ///      &lt;performanceCounter computer=&quot;.&quot; category=&quot;Processor&quot; counter=&quot;% Processor Time&quot; instance=&quot;_Total&quot; returnValueInverted=&quot;False&quot; warningValue=&quot;80&quot; errorValue=&quot;100&quot; /&gt;
        ///      --&gt;
        ///  &lt;/performanceCounters&gt;
        ///&lt;/config&gt;.
        /// </summary>
        internal static string PerfCounterCollectorDefaultConfig {
            get {
                return ResourceManager.GetString("PerfCounterCollectorDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///		&lt;performanceCounters&gt;
        ///				&lt;performanceCounter computer=&quot;.&quot; category=&quot;Processor&quot; counter=&quot;% Processor Time&quot; instance=&quot;_Total&quot; returnValueInverted=&quot;False&quot; warningValue=&quot;80&quot; errorValue=&quot;99&quot; /&gt;
        ///				&lt;performanceCounter computer=&quot;.&quot; category=&quot;LogicalDisk&quot; counter=&quot;% Free Space&quot; instance=&quot;C:&quot; returnValueInverted=&quot;True&quot; warningValue=&quot;15&quot; errorValue=&quot;5&quot; /&gt;
        ///				&lt;performanceCounter computer=&quot;.&quot; category=&quot;Memory&quot; counter=&quot;% Committed Bytes In Use&quot; instance=&quot;&quot; returnValueInverted=&quot;False&quot; warningValue=&quot;80&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PerfCounterCollectorQuickConfig1 {
            get {
                return ResourceManager.GetString("PerfCounterCollectorQuickConfig1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string PerfCounterCollectorQuickConfig2 {
            get {
                return ResourceManager.GetString("PerfCounterCollectorQuickConfig2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///&lt;!--
        ///  &lt;hostAddress&gt;
        ///    &lt;entry pingMethod=&quot;Ping|HTTP|Socket&quot; address=&quot;hostName&quot; description=&quot;&quot; maxTimeMS=&quot;1000&quot; timeOutMS=&quot;5000&quot;
        ///      httpProxyServer=&quot;&quot; 
        ///      socketPort=&quot;23&quot; receiveTimeoutMS=&quot;30000&quot; sendTimeoutMS=&quot;30000&quot; useTelnetLogin=&quot;false&quot; userName=&quot;&quot; password=&quot;&quot; /&gt;
        ///  &lt;/hostAddress&gt;
        ///  --&gt;
        ///&lt;/config&gt;.
        /// </summary>
        internal static string PingCollectorDefaultConfig {
            get {
                return ResourceManager.GetString("PingCollectorDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///  &lt;queries&gt;
        ///    &lt;!--
        ///    &lt;query name=&quot;&quot; useRemoteServer=&quot;False&quot; server=&quot;&quot; registryHive=&quot;LocalMachine&quot; path=&quot;&quot; keyName=&quot;&quot; expandEnvironmentNames=&quot;False&quot;
        ///      returnValueIsNumber=&quot;False&quot; successValue=&quot;[any]&quot; warningValue=&quot;1&quot; errorValue=&quot;2&quot;
        ///      returnValueInARange=&quot;False&quot; returnValueInverted=&quot;False&quot;
        ///      /&gt;
        ///    --&gt;
        ///  &lt;/queries&gt;
        ///&lt;/config&gt;.
        /// </summary>
        internal static string RegistryQueryCollectorDefaultConfig {
            get {
                return ResourceManager.GetString("RegistryQueryCollectorDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap satelitedish {
            get {
                object obj = ResourceManager.GetObject("satelitedish", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///&lt;!--
        ///  &lt;machine name=&quot;hostName&quot;&gt;
        ///    &lt;service name=&quot;service 1&quot; /&gt;
        ///    &lt;service name=&quot;service 2&quot; /&gt;
        ///  &lt;/machine&gt;
        ///  --&gt;
        ///&lt;/config&gt;.
        /// </summary>
        internal static string ServiceStateCollectorDefaultConfig {
            get {
                return ResourceManager.GetString("ServiceStateCollectorDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap settings_16 {
            get {
                object obj = ResourceManager.GetObject("settings_16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///  &lt;smtp hostServer=&quot;&quot; useDefaultCredentials=&quot;True&quot; domain=&quot;&quot; userName=&quot;&quot; password=&quot;&quot; 
        ///        fromAddress=&quot;&quot; toAddress=&quot;&quot; senderAddress=&quot;&quot; replyToAddress=&quot;&quot; mailPriority=&quot;1&quot;
        ///        useTLS=&quot;false&quot; isBodyHtml=&quot;True&quot; port=&quot;25&quot;
        ///        subject=&quot;%AlertLevel% - %CollectorName%&quot; body=&quot;QuickMon alert raised for &amp;lt;b&amp;gt;&apos;%CollectorName%&apos;&amp;lt;/b&amp;gt;&amp;lt;br /&amp;gt;
        ///&amp;lt;b&amp;gt;Date Time:&amp;lt;/b&amp;gt; %DateTime%&amp;lt;br /&amp;gt;
        ///&amp;lt;b&amp;gt;Current state:&amp;lt;/b&amp;gt; %CurrentState%&amp;lt;br /&amp;gt;
        ///&amp;lt;b&amp;gt;Collector:&amp;lt;/b&amp;g [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SMTPNotifierDefaultConfig {
            get {
                return ResourceManager.GetString("SMTPNotifierDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///  &lt;webServices&gt;
        ///    &lt;!--
        ///      &lt;webService url=&quot;&quot; name=&quot;&quot; method=&quot;&quot; paramatersCSV=&quot;&quot;         
        ///        checkType=&quot;0&quot; resultType=&quot;&quot; checkValue1=&quot;&quot; checkValue2=&quot;&quot;
        ///         /&gt;
        ///         
        ///      --&gt;
        ///    &lt;!--
        ///      checkType can be 0 (success) or 1 (failure)
        ///      resultType is one of SoapWebServicePingResultEnum
        ///      checkValue1 is first custom value
        ///      checkValue2 is second custom value e.g. when checking range like &apos;between 1 and 10&apos;
        ///    --&gt;
        ///  &lt;/webServices&gt;
        ///&lt;/config&gt;.
        /// </summary>
        internal static string SoapWebServicePingCollectorDefaultConfig {
            get {
                return ResourceManager.GetString("SoapWebServicePingCollectorDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap stop {
            get {
                object obj = ResourceManager.GetObject("stop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;config&gt;
        ///  &lt;wmiQueries&gt;
        ///    &lt;wmiQuery name=&quot;Example&quot; namespace=&quot;root\CIMV2&quot; machineName=&quot;.&quot;&gt;
        ///      &lt;stateQuery syntax=&quot;SELECT FreeSpace FROM Win32_LogicalDisk where Caption = &apos;C:&apos;&quot; returnValueIsInt=&quot;True&quot; returnValueInverted=&quot;True&quot;
        ///            warningValue=&quot;1048576000&quot; errorValue=&quot;524288000&quot; successValue=&quot;[any]&quot;
        ///            useRowCountAsValue=&quot;False&quot; /&gt;
        ///      &lt;detailQuery syntax=&quot;SELECT Caption, Size, FreeSpace, Description FROM Win32_LogicalDisk where Caption = &apos;C:&apos;&quot; columnNames=&quot;Caption, Size, FreeS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WMIQueryCollectorDefaultConfig {
            get {
                return ResourceManager.GetString("WMIQueryCollectorDefaultConfig", resourceCulture);
            }
        }
    }
}
