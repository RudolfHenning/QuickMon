<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAQAAEABADoAgAANgAAABAQEAABAAQAKAEAAB4DAAAwMBAAAQAEAGgGAABGBAAAKAAAACAA
        AABAAAAAAQAEAAAAAACAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu7u7u7u7u7gAIiIiI
        iAAA7u7u7u7u7uAACIiIiIgAAO4AAAAA7u4AAAgICAgIAADuAAAADu7gAAAICAgICAAA7gAAAO7uAAAA
        AAAAAAAAAO4AAA7u4AAAAAAAAAAAAADuAADu7gAAAAAAAAAAAAAA7gAO7uAAAAAAAAAAAAAAAO4A7u4A
        AAAAAAAAAAAAAADuDu7gAAAAC7cAAAAAAAAA7u7uAAAAAAu3AAAAAAAAAO7u4AAAAAAAu3AAAAAAAADu
        7gAAAAAAALu3AAAAAAAA7uAAAAAAAAALtwAAAAAAAO4AAAAAAAAAC7twAAAAAADgAAAAAAAAAAC7twAA
        AAAAAAAAAAAAAAAAu7cAAAAAAAAAAAAAAAAAAAsAEAAAAAAAAAAAAAAAAAAAERAAAAAAAAAAAAAAAAAA
        ABEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP////////////////////////////////////+AAAABgAAQAYAAMAGAAHABh8DwAYeB
        8AGHA3//hgc//4QPH/+AHw//gD8H/4B/B/+A/4P/gf+B/4P/wf+H/8D/j//gf5//4H+///A////4P///
        +D////x/////////////////KAAAABAAAAAgAAAAAQAEAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7u7uAAd3dwDgDuAABwcHAODuAAAAAAAA7u
        AAAAAAAADuAAAAAAAAAOAAALgAAAAAAAAAvwAAAAAAAAALgAAAAAAAAAsAAAAAAAAAABEAAAAAAAAAAA
        AAAAAAAAAAAAAP//AAD//wAA//8AAAAAAAgAgAAAAYAAAAGAAAAE/wAIDH8AABw/AAA8PwAAfh8ACP4f
        AAD/DwAA/x8AAP//AAgoAAAAMAAAAGAAAAABAAQAAAAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        gAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7u7u7u7u7u7u7uAAD4iIiIiIiIAAAO7u7u7u7u7u7u7u7g
        AAD4iIiIiIiIAAAO7u7u7u7u7u7u7u4AAAD4iIiIiIiIAAAO7u7u7u7u7u7u7uAAAAD4D4D4D4D4AAAO
        7uAAAAAADu7u7gAAAAD4D4D4D4D4AAAO7uAAAAAA7u7u4AAAAAD/D/D/D/D/AAAO7uAAAAAO7u7uAAAA
        AAAAAAAAAAAAAAAO7uAAAADu7u7gAAAAAAAAAAAAAAAAAAAO7uAAAA7u7u4AAAAAAAAAAAAAAAAAAAAO
        7uAAAO7u7uAAAIhwAAAAAAAAAAAAAAAO7uAADu7u7gAAAIiHcAAAAAAAAAAAAAAO7uAA7u7u4AAAAIiD
        dwAAAAAAAAAAAAAO7uAO7u7uAAAAAIi7NwAAAAAAAAAAAAAO7uDu7u7gAAAAAAu7N3AAAAAAAAAAAAAO
        7u7u7u4AAAAAAAe7s3cAAAAAAAAAAAAO7u7u7uAAAAAAAAC7uzcAAAAAAAAAAAAO7u7u7gAAAAAAAAAL
        uzdwAAAAAAAAAAAO7u7u4AAAAAAAAAAHu7N3AAAAAAAAAAAO7u7uAAAAAAAAAAAAe7s3AAAAAAAAAAAO
        7u7gAAAAAAAAAAAAC7s3cAAAAAAAAAAO7u4AAAAAAAAAAAAAB7uzdwAAAAAAAAAO7uAAAAAAAAAAAAAA
        AHu7NwAAAAAAAAAO7gAAAAAAAAAAAAAAAAu7N3AAAAAAAAAO4AAAAAAAAAAAAAAAAAe7s3cAAAAAAAAO
        AAAAAAAAAAAAAAAAAAB7uzcAAAAAAAAAAAAAAAAAAAAAAAAAAAALuzAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAHuzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAARERAAAAAAAAAAAAAAAAAAAAAAAAAAAAABERAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAABERAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAAwAAAAgABAADAAAAGAAEAAMAAAA4AAQAAwAAAHgAB
        AADAAAA+AAEAAMAAAH4AAQAAwP4A/gABAADA/AH+AAEAAMD4An///wAAwPAGH///AADA4A4H//8AAMDA
        HgP//wAAwIA+Af//AADAAH4B//8AAMAA/wD//wAAwAH/AH//AADAA/+Af/8AAMAH/8A//wAAwA//wB//
        AADAH//gH/8AAMA///AP/wAAwH//8Af/AADA///4B/8AAMH///wD/wAAw////AH/AADH///+Af8AAM//
        //8A/wAA3////wB/AAD/////gH8AAP/////APwAA/////8A/AAD/////4H8AAP/////gfwAA//////D/
        AAD///////8AAP///////wAA////////AAD///////8AAA==
</value>
  </data>
</root>